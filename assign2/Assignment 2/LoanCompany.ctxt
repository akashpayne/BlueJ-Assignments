#BlueJ class context
comment0.params=
comment0.target=LoanCompany()
comment0.text=\r\n\ A\ Constructor\ for\ objects\ of\ class\ LoanCompany;\ \r\n\ initialises\ the\ collection\ field.\r\n
comment1.params=id\ amount
comment1.target=void\ addLoan(java.lang.String,\ int)
comment1.text=\r\n\ A\ method\ taking\ two\ parameters\:\ the\ ID\ of\ a\ student\ and\ a\ \r\n\ loan\ amount,\ in\ that\ order.\ The\ method\ creates\ a\ StudentLoan\ object\ using\r\n\ those\ two\ parameters\ and\ store\ the\ StudentLoan\ in\ the\ collection.\r\n
comment10.params=
comment10.target=void\ removeCleared()
comment10.text=\r\n\ a\ method\ that\ removes\ all\ StudentLoan\ \r\n\ objects\ from\ the\ collection\ that\ have\ a\ zero\ \r\n\ amount\ left.\ The\ method\ tests\ with\ a\ collection\ \r\n\ containing\ a\ mixture\ of\ cleared\ and\ uncleared\ loans.\r\n\ \ \ \ \ \ \ \ \ \ \ \ >>>>>>\ WHILE\ LOOP\ \ <<<<<<<\r\n
comment11.params=
comment11.target=void\ removeCleared2()
comment11.text=\r\n\ a\ method\ that\ removes\ all\ StudentLoan\ \r\n\ objects\ from\ the\ collection\ that\ have\ a\ zero\ \r\n\ amount\ left.\ The\ method\ tests\ with\ a\ collection\ \r\n\ containing\ a\ mixture\ of\ cleared\ and\ uncleared\ loans.\r\n\ \ \ \ \ \ >>>>>>\ WHILE\ LOOP\ &&\ Iterator\ <<<<<<<\r\n
comment2.params=
comment2.target=int\ getNumberOfLoans()
comment2.text=\r\n\ A\ method\ that\ returns\ the\ number\ of\ Student\ Loan\ Objects\ in\ the\ Collection.\ \r\n\ @return\ The\ number\ of\ loans\ in\ the\ collection.\r\n
comment3.params=index
comment3.target=boolean\ validIndex(int)
comment3.text=\r\n\ Determine\ whether\ the\ given\ index\ is\ valid\ for\ the\ collection.\r\n\ //Print\ an\ error\ message\ if\ it\ is\ not.\r\n\ @param\ index\ The\ index\ to\ be\ checked.\r\n\ @return\ true\ if\ the\ index\ is\ valid,\ false\ otherwise.\r\n
comment4.params=
comment4.target=void\ list()
comment4.text=\r\n\ A\ method\ that\ prints\ the\ deatils\ of\ all\ the\ Student\ Loan\ Objects\ in\ the\r\n\ collection,\ one\ per\ line,\ with\ an\ index\ number\ against\ each\ (index\ starts\r\n\ at\ 0).\r\n
comment5.params=
comment5.target=void\ listAll()
comment5.text=\r\n\ A\ method\ that\ prints\ the\ deatils\ of\ all\ the\ Student\ Loan\ Objects\ in\ the\r\n\ collection,\ one\ per\ line,\ with\ an\ index\ number\ against\ each\ (index\ starts\r\n\ at\ 0).\ >>\ WHILE\ LOOP\ <<\r\n
comment6.params=index
comment6.target=void\ removeLoan(int)
comment6.text=\r\n\ A\ method\ that\ takes\ an\ integer\ index\ as\ its\ parameter\ and\ removes\ \r\n\ the\ Student\ Loan\ at\ that\ Index\ from\ the\ collection.\ \r\n\ If\ the\ Index\ is\ not\ valid\ than\ an\ error\ message\ should\ be\ printed\r\n\ and\ the\ removal\ should\ not\ be\ attempted.\r\n
comment7.params=index\ amount
comment7.target=void\ repay(int,\ int)
comment7.text=\r\n\ A\ method\ that\ takes\ two\ integer\ parameters\:\ an\ index\ and\ an\ \r\n\ amount,\ in\ that\ order.\ This\ calls\ the\ payOff\ method\ of\ \r\n\ the\ StudentLoan\ at\ the\ given\ index,\ passing\ the\ given\ amount.\ \r\n\ Prints\ an\ error\ message\ if\ the\ index\ is\ not\ valid\ and\ does\ \r\n\ nothing\ to\ the\ collection.\ \r\n
comment8.params=
comment8.target=void\ showOutstanding()
comment8.text=\r\n\ a\ method\ that\ prints\ details\ of\ only\ those\ students\ \r\n\ who\ have\ a\ non-zero\ amount\ in\ their\ loan.\r\n
comment9.params=
comment9.target=void\ removeClearedLoans()
comment9.text=\r\n\ a\ method\ that\ removes\ all\ StudentLoan\ \r\n\ objects\ from\ the\ collection\ that\ have\ a\ zero\ \r\n\ amount\ left.\ The\ method\ tests\ with\ a\ collection\ \r\n\ containing\ a\ mixture\ of\ cleared\ and\ uncleared\ loans.\r\n\ \ \ \ \ \ \ \ \ \ \ \ >>>>>>\ FOR\ LOOP\ <<<<<<<\r\n
numComments=12
